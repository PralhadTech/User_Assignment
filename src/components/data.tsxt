import { useState, useEffect } from "react";
import { USERS_API_URL } from "../../constants";
import DehazeOutlinedIcon from "@mui/icons-material/DehazeOutlined";
import SwapVertOutlinedIcon from "@mui/icons-material/SwapVertOutlined";
import FilterAltIcon from "@mui/icons-material/FilterAlt";
import Shimmer from "./Shimmer";

const UserData = () => {
  const [users, setUsers] = useState([]);
  const [filteredUsers, setFilteredUsers] = useState([]);
  const [genderFilter, setGenderFilter] = useState("");

  useEffect(() => {
    getUsers();
  }, []);

  async function getUsers() {
    try {
      const res = await fetch(USERS_API_URL);
      const jsonData = await res.json();
      setUsers(jsonData.users);
      setFilteredUsers(jsonData.users);
    } catch (error) {
      console.error(error);
    }
  }

  const handleChange = (e) => {
    setGenderFilter(e.target.value);
    filterByGender(e.target.value);
  };

  function filterByGender(gender) {
    if (gender) {
      const filtered = users.filter((user) => user.gender === gender);
      setFilteredUsers(filtered);
    } else {
      setFilteredUsers(users);
    }
  }

  function sortUsersByID() {
    const sortedID = [...filteredUsers].sort((a, b) => b.id - a.id);
    setFilteredUsers(sortedID);
  }

  function sortUsersByName() {
    const sortedName = [...filteredUsers].sort((a, b) =>
      a.firstName.localeCompare(b.firstName)
    );
    setFilteredUsers(sortedName);
  }

  function sortUsersByAge() {
    const sortedAge = [...filteredUsers].sort((a, b) => a.age - b.age);
    setFilteredUsers(sortedAge);
  }

  return (
    <div className="container mx-auto px-4">
      <div className="flex justify-between">
        <h1>pixel6</h1>
        <button>
          <DehazeOutlinedIcon />
        </button>
      </div>

      <div className="flex text-xl justify-between font-bold ">
        <h1 className="text-2xl font-bold my-4">Employees</h1>
        <select onChange={handleChange} value={genderFilter}>
          <option value="">Gender</option>
          <option value="male">Male</option>
          <option value="female">Female</option>
        </select>
        <div className="flex ">
          <FilterAltIcon />
          <select>
            <option value="">Country</option>
            <option value="USA">USA</option>
            <option value="Other">Other</option>
          </select>
        </div>
      </div>
      {/* Table */}
      <table className="min-w-full bg-white border border-gray-200">
        <thead>
          <tr className="bg-gray-100 border-b">
            <th className="px-4 py-2 text-left">
              ID
              <button onClick={sortUsersByID}>
                <SwapVertOutlinedIcon />
              </button>
            </th>
            <th className="px-4 py-2 text-left">Image</th>
            <th className="px-4 py-2 text-left">
              Full Name{" "}
              <button onClick={sortUsersByName}>
                <SwapVertOutlinedIcon />
              </button>
            </th>
            <th className="px-4 py-2 text-left">
              Demography
              <button onClick={sortUsersByAge}>
                <SwapVertOutlinedIcon />
              </button>
            </th>
            <th className="px-4 py-2 text-left">Designation</th>
            <th className="px-4 py-2 text-left">Location</th>
          </tr>
        </thead>
        <tbody>
          {filteredUsers.map((user) => (
            <tr key={user.id} className="border-b hover:bg-gray-50">
              <td className="px-4 py-2">{user.id}</td>
              <td className="px-4 py-2">
                <img
                  src={user.image}
                  alt="User"
                  className="w-10 h-10 rounded-full"
                />
              </td>
              <td className="px-4 py-2">
                {user.firstName} {user.maidenName} {user.lastName}
              </td>
              <td className="px-4 py-2">
                {user.gender[0].toUpperCase()}/{user.age}
              </td>
              <td className="px-4 py-2">{user.company.title}</td>
              <td className="px-4 py-2">
                {user.address.state}, {user.address.country}
              </td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  );
};

export default UserData;
